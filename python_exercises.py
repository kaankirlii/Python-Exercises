# -*- coding: utf-8 -*-
"""python_exercises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_7zCY-pDeyaMPLUQtjo8TxjMSKb1NdXn

Exercise 11: Write a program to display all prime numbers within a *range*

Solution:
"""

for number in range(1000,2000):
  for i in range(2,number):
    if number % i == 0:
      print('The number {} is not prime'.format(number))
      break
  else:
    print('The number {} is prime'.format(number))

"""Exercise 12: Given a range of the first 10 numbers, iterate from the start number to the end number, and in each iteration, print the sum of the current number and previous numbers"""

for i in range(1,11):
  summation = 0
  for j in range(1,i+1):
    summation += j
  print('Iteration: {} ====> summation: {}'.format(i,summation))

i=1
while i<=10:
  summation = 0
  j=1
  while j<=i:
    summation +=j
    j+=1
  print('Iteration: {} ====> summation: {}'.format(i,summation))
  i+=1

"""Exercise 13: Write a code to reverse an integer number"""

number = 2468
string_number=str(number)
reversed_number = string_number[::-1]
print(reversed_number)

number = input('Enter the number: ')
reversed_number = number[::-1]
print(reversed_number)

"""Exercise 14: Return the largest item from the given list"""

numbers = [12,55,30,23,10,67,0,-5]
maximum = numbers[0]

for i in numbers[1:]:
  if i>maximum:
    maximum=i

print(maximum)

numbers = [12,55,30,23,10,67,0,-5]
maximum = max(numbers)
minimum = min(numbers)
print(maximum)
print(minimum)

"""Exercise 15: Write a function that takes the base and height of a triangle and return its area"""

def area_of_triangle(base,height):
  area=0.5*base*height
  return area

area=area_of_triangle(12,40)
print(area)

"""Exercise 16: Write a program to swap two variables


"""

a=30
 b=50

 temp = a
 a = b
 b = temp

 print('a=', a)
 print('b=', b)

a=30
 b=50

 a, b = b, a

 print('a=', a)
 print('b=', b)

"""Exercise 17: Swap two number without using a temp variable"""

a=30
b=50

a=a+b # a=80, b=50
b=a-b # a=80, b=30
a=a-b # a=50, b=30

print('a=', a)
print('b=', b)

"""Exercise 18: Average of integers in a list"""

#solution 1
def get_average(numbers):
  summation = 0
  for i in numbers:
    summation += i
  average=summation/len(numbers)
  return average

ages = [12,33,50,23,40,14]
avg = get_average(ages)

print(avg)

#solution 2
def get_average(numbers):
  summation = sum(numbers)
  average=summation/len(numbers)
  return average

ages = [1,2,3,4]
avg = get_average(ages)

print(avg)

"""Exercise 19: The Multiplication Table"""

#solution 1
for i in range(1,13):
  for j in range(1,11):
    print(i,'*',j,'=',i*j)
  print()

#solution 2
i=1
while i<=12:
  j=1
  while j<=10:
    print(i,'*',j,'=',i*j)
    j+=1
  print()
  i+=1

"""Exercise 20: Odd or Even"""

number = int(input('Enter a number: '))
if number%2 == 1:
  print('The number is odd')
elif number % 2 == 0:
  print('The number is even')

"""Exercise 21: The Largest Among Three Numbers"""

number1=int(input('Enter the first number: '))
number2=int(input('Enter the second number: '))
number3=int(input('Enter the third number: '))

if number1 >= number2 and number1 >= number3:
  largest = number1
elif number2 >= number1 and number2 >= number3:
  largest = number2
else:
  largest = number3

print('The largest is: ',largest)

"""Exercise 22: Converting Decimal Into Other Number Systems"""

number = 123

#decimal to binary
print(bin(number))
#decimal to hexadecimal
print(hex(number))
#decimal to octal
print(oct(number))

"""Exercise 23: Converting from ASCII to Character and Vice Versa"""

print(ord('a'))
print(ord('K'))
print()
print(chr(100))
print(chr(80))

"""Exercise 24: Finding The Factors of a Number"""

#solution 1
number = int(input('Enter the number: '))
for i in range(1,number+1):
  if number%i == 0:
    print(i)

#solution 2
number = int(input('Enter the number: '))
factors = []
for i in range(1, number+1):
    if number%i == 0:
        factors.append(i)
print('The factors of the number', number, 'are:')
print(factors)

"""Exercise 25: Palindrome or Not"""

# madam
# radar
# hello (not palindrome)
#word ='hello'
#print(word)
#print(word[::-1])

word = input('Enter the word to check: ')
if word == word[::-1]:
  print('The word is Palindrome')
else:
  print('The word is not Palindrome')

"""Exercise 26: Celsius to Fahrenheit"""

#Celsius * 1.8 = Fahrenheit -32
#Fahrenheit = (Celsius *1.8)+32

celsius= float(input('Enter the degree in Celsius: '))
fahrenheit = (celsius*1.8)+32
print('Degree in Fahrenheit: {}'.format(fahrenheit))

"""Exercise 27: (+) or (-) or (0)"""

number = float(input('Enter a number: '))

if number > 0:
  print("The number is positive")
elif number < 0:
  print("The number is negative")
else:
  print("The number is equal to zero")

"""Exercise 28: Random Number"""

import random
#1
number = random.random()
print(number)
#2
number2 = random.randint(1,4)
print(number2)
#3
number3 = random.sample([10,20,30,40],3)
print(number3)

"""Exercise 29: Is the List Empty?"""

my_list =[]
#1
if not my_list:
  print('The list is empty')
#2
if len(my_list)==0:
  print('The list is empty')
#3
if my_list==[]:
  print('The list is empty')

"""Exercise 30: Base64 Encoding and Decoding"""

import base64
#encoding
plain_text ='programming'
cipher_text = base64.b64encode(plain_text.encode())
print(cipher_text.decode())

#decoding
cipher_text = 'cHJvZ3JhbW1pbmc='
plain_text =base64.b64decode(cipher_text)
print(plain_text.decode())

"""Exercise 31: MD5 Encoding"""

import hashlib

input_word = input('Enter the word: ')
cipher_text = hashlib.md5(input_word.encode())
print('The MD5 for your input:',cipher_text.hexdigest())